#!/usr/bin/env bash

VERSION=${1:-2.3.7-p3}
EDITION=${2:-community}

bin/stop

# Translate version to root in integer format. Ex. 2.4.3-p1 -> 243
VERSION_ROOT=$(echo "$VERSION" | cut -b 1-5 | sed -e 's/\.//g')

if (( $(echo "$VERSION_ROOT < 244" | bc -l) )); then
  # sed -i -e 's/8.1\-fpm\-1/7.4\-fpm\-15/g' compose.yaml
  echo "Building with PHP 7.4"
else
  # sed -i -e 's/7.4\-fpm\-15/8.1\-fpm\-1/g' compose.yaml
  echo "Version > 244"
fi

bin/start --no-dev
[ $? != 0 ] && echo "Failed to start Docker services" && exit

bin/setup-composer-auth

bin/fixowns

if [ "$EDITION" == "mageos-nightly" ]; then
  bin/cli composer create-project --stability alpha --repository-url=https://upstream-nightly.mage-os.org magento/project-community-edition .
elif [ "$EDITION" == "mageos-mirror" ] || [ "$EDITION" == "mageos" ]; then
  bin/cli composer create-project --repository-url=https://mirror.mage-os.org magento/project-community-edition="${VERSION}" .
elif [ "$EDITION" == "mageos-hypernode-mirror" ]; then
  bin/cli composer create-project --repository-url=https://mage-os.hypernode.com/mirror magento/project-community-edition="${VERSION}" .
elif [ "$EDITION" == "mageos-maxcluster-mirror" ]; then
  bin/cli composer create-project --repository-url=https://mage-os.maxcluster.net/mirror magento/project-community-edition="${VERSION}" .
else
  bin/cli composer create-project --repository=https://repo.magento.com/ magento/project-"${EDITION}"-edition="${VERSION}" .
fi

echo "Adding Magento modules to Composer allow-plugins directive..."
bin/clinotty composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
bin/clinotty composer config --no-plugins allow-plugins.magento/composer-root-update-plugin true
bin/clinotty composer config --no-plugins allow-plugins.magento/magento-composer-installer true
bin/clinotty composer config --no-plugins allow-plugins.magento/inventory-composer-installer true
bin/clinotty composer config --no-plugins allow-plugins.laminas/laminas-dependency-plugin true

bin/fixowns

bin/cli [ ! -f "./var/composer_home/auth.json" ] && bin/cli mkdir -p ./var/composer_home && bin/cli cp /var/www/.composer/auth.json ./var/composer_home/auth.json
